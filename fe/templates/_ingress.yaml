{{- define "common.ingress.tpl" }}
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "fullname" . -}}
{{- $svcPort := .Values.service.port | default "80" -}}
{{- $host := include "webhost" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: {{ default "/" .Values.ingress.basePath }}$1
    nginx.ingress.kubernetes.io/enable-cors: "true"
    {{- if .Values.ingress.corsHttpOrigin }}
    nginx.ingress.kubernetes.io/cors-allow-origin: "$http_origin"
    {{- else }} 
    nginx.ingress.kubernetes.io/cors-allow-origin: "http(s)://*.{{ .Values.service.host }}"
    {{- end }} 
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Accept-Language uk_UA;
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: "nginx" 
  tls:
    - hosts:
      - {{ $host }}
      secretName: {{ .Release.Namespace }}-web-tls
  rules:
    - host: {{ $host }}
      http:
        paths:
          - path: {{ include "webpath" . }}(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $fullName }}
                port: 
                  number: {{ $svcPort }}
{{- end }}
{{- end -}}
{{- define "common.ingress" -}}
{{- include "common.util.merge" (append . "common.ingress.tpl") -}}
{{- end -}}